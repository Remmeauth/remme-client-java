// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: validator.proto

package sawtooth.sdk.protobuf;

public final class Validator {
  private Validator() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MessageList_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MessageList_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Message_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Message_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017validator.proto\")\n\013MessageList\022\032\n\010mess" +
      "ages\030\001 \003(\0132\010.Message\"\277\035\n\007Message\022*\n\014mess" +
      "age_type\030\001 \001(\0162\024.Message.MessageType\022\026\n\016" +
      "correlation_id\030\002 \001(\t\022\017\n\007content\030\003 \001(\014\"\336\034" +
      "\n\013MessageType\022\013\n\007DEFAULT\020\000\022\027\n\023TP_REGISTE" +
      "R_REQUEST\020\001\022\030\n\024TP_REGISTER_RESPONSE\020\002\022\031\n" +
      "\025TP_UNREGISTER_REQUEST\020\003\022\032\n\026TP_UNREGISTE" +
      "R_RESPONSE\020\004\022\026\n\022TP_PROCESS_REQUEST\020\005\022\027\n\023" +
      "TP_PROCESS_RESPONSE\020\006\022\030\n\024TP_STATE_GET_RE" +
      "QUEST\020\007\022\031\n\025TP_STATE_GET_RESPONSE\020\010\022\030\n\024TP" +
      "_STATE_SET_REQUEST\020\t\022\031\n\025TP_STATE_SET_RES" +
      "PONSE\020\n\022\033\n\027TP_STATE_DELETE_REQUEST\020\013\022\034\n\030" +
      "TP_STATE_DELETE_RESPONSE\020\014\022\037\n\033TP_RECEIPT" +
      "_ADD_DATA_REQUEST\020\r\022 \n\034TP_RECEIPT_ADD_DA" +
      "TA_RESPONSE\020\016\022\030\n\024TP_EVENT_ADD_REQUEST\020\017\022" +
      "\031\n\025TP_EVENT_ADD_RESPONSE\020\020\022\037\n\033CLIENT_BAT" +
      "CH_SUBMIT_REQUEST\020d\022 \n\034CLIENT_BATCH_SUBM" +
      "IT_RESPONSE\020e\022\035\n\031CLIENT_BLOCK_LIST_REQUE" +
      "ST\020f\022\036\n\032CLIENT_BLOCK_LIST_RESPONSE\020g\022\"\n\036" +
      "CLIENT_BLOCK_GET_BY_ID_REQUEST\020h\022\035\n\031CLIE" +
      "NT_BLOCK_GET_RESPONSE\020i\022\035\n\031CLIENT_BATCH_" +
      "LIST_REQUEST\020j\022\036\n\032CLIENT_BATCH_LIST_RESP" +
      "ONSE\020k\022\034\n\030CLIENT_BATCH_GET_REQUEST\020l\022\035\n\031" +
      "CLIENT_BATCH_GET_RESPONSE\020m\022#\n\037CLIENT_TR" +
      "ANSACTION_LIST_REQUEST\020n\022$\n CLIENT_TRANS" +
      "ACTION_LIST_RESPONSE\020o\022\"\n\036CLIENT_TRANSAC" +
      "TION_GET_REQUEST\020p\022#\n\037CLIENT_TRANSACTION" +
      "_GET_RESPONSE\020q\022 \n\034CLIENT_STATE_CURRENT_" +
      "REQUEST\020r\022!\n\035CLIENT_STATE_CURRENT_RESPON" +
      "SE\020s\022\035\n\031CLIENT_STATE_LIST_REQUEST\020t\022\036\n\032C" +
      "LIENT_STATE_LIST_RESPONSE\020u\022\034\n\030CLIENT_ST" +
      "ATE_GET_REQUEST\020v\022\035\n\031CLIENT_STATE_GET_RE" +
      "SPONSE\020w\022\037\n\033CLIENT_BATCH_STATUS_REQUEST\020" +
      "x\022 \n\034CLIENT_BATCH_STATUS_RESPONSE\020y\022\036\n\032C" +
      "LIENT_RECEIPT_GET_REQUEST\020z\022\037\n\033CLIENT_RE" +
      "CEIPT_GET_RESPONSE\020{\022#\n\037CLIENT_BLOCK_GET" +
      "_BY_NUM_REQUEST\020|\022\034\n\030CLIENT_PEERS_GET_RE" +
      "QUEST\020}\022\035\n\031CLIENT_PEERS_GET_RESPONSE\020~\022." +
      "\n*CLIENT_BLOCK_GET_BY_TRANSACTION_ID_REQ" +
      "UEST\020\177\022)\n$CLIENT_BLOCK_GET_BY_BATCH_ID_R" +
      "EQUEST\020\200\001\022\036\n\031CLIENT_STATUS_GET_REQUEST\020\201" +
      "\001\022\037\n\032CLIENT_STATUS_GET_RESPONSE\020\202\001\022$\n\037CL" +
      "IENT_EVENTS_SUBSCRIBE_REQUEST\020\364\003\022%\n CLIE" +
      "NT_EVENTS_SUBSCRIBE_RESPONSE\020\365\003\022&\n!CLIEN" +
      "T_EVENTS_UNSUBSCRIBE_REQUEST\020\366\003\022\'\n\"CLIEN" +
      "T_EVENTS_UNSUBSCRIBE_RESPONSE\020\367\003\022\022\n\rCLIE" +
      "NT_EVENTS\020\370\003\022\036\n\031CLIENT_EVENTS_GET_REQUES" +
      "T\020\371\003\022\037\n\032CLIENT_EVENTS_GET_RESPONSE\020\372\003\022\023\n" +
      "\016GOSSIP_MESSAGE\020\310\001\022\024\n\017GOSSIP_REGISTER\020\311\001" +
      "\022\026\n\021GOSSIP_UNREGISTER\020\312\001\022\031\n\024GOSSIP_BLOCK" +
      "_REQUEST\020\315\001\022\032\n\025GOSSIP_BLOCK_RESPONSE\020\316\001\022" +
      "%\n GOSSIP_BATCH_BY_BATCH_ID_REQUEST\020\317\001\022+" +
      "\n&GOSSIP_BATCH_BY_TRANSACTION_ID_REQUEST" +
      "\020\320\001\022\032\n\025GOSSIP_BATCH_RESPONSE\020\321\001\022\035\n\030GOSSI" +
      "P_GET_PEERS_REQUEST\020\322\001\022\036\n\031GOSSIP_GET_PEE" +
      "RS_RESPONSE\020\323\001\022\020\n\013NETWORK_ACK\020\254\002\022\024\n\017NETW" +
      "ORK_CONNECT\020\255\002\022\027\n\022NETWORK_DISCONNECT\020\256\002\022" +
      "&\n!AUTHORIZATION_CONNECTION_RESPONSE\020\330\004\022" +
      "\034\n\027AUTHORIZATION_VIOLATION\020\331\004\022 \n\033AUTHORI" +
      "ZATION_TRUST_REQUEST\020\332\004\022!\n\034AUTHORIZATION" +
      "_TRUST_RESPONSE\020\333\004\022$\n\037AUTHORIZATION_CHAL" +
      "LENGE_REQUEST\020\334\004\022%\n AUTHORIZATION_CHALLE" +
      "NGE_RESPONSE\020\335\004\022#\n\036AUTHORIZATION_CHALLEN" +
      "GE_SUBMIT\020\336\004\022#\n\036AUTHORIZATION_CHALLENGE_" +
      "RESULT\020\337\004\022\021\n\014PING_REQUEST\020\274\005\022\022\n\rPING_RES" +
      "PONSE\020\275\005\022\037\n\032CONSENSUS_REGISTER_REQUEST\020\240" +
      "\006\022 \n\033CONSENSUS_REGISTER_RESPONSE\020\241\006\022\036\n\031C" +
      "ONSENSUS_SEND_TO_REQUEST\020\242\006\022\037\n\032CONSENSUS" +
      "_SEND_TO_RESPONSE\020\243\006\022 \n\033CONSENSUS_BROADC" +
      "AST_REQUEST\020\244\006\022!\n\034CONSENSUS_BROADCAST_RE" +
      "SPONSE\020\245\006\022\'\n\"CONSENSUS_INITIALIZE_BLOCK_" +
      "REQUEST\020\246\006\022(\n#CONSENSUS_INITIALIZE_BLOCK" +
      "_RESPONSE\020\247\006\022%\n CONSENSUS_FINALIZE_BLOCK" +
      "_REQUEST\020\250\006\022&\n!CONSENSUS_FINALIZE_BLOCK_" +
      "RESPONSE\020\251\006\022#\n\036CONSENSUS_CANCEL_BLOCK_RE" +
      "QUEST\020\252\006\022$\n\037CONSENSUS_CANCEL_BLOCK_RESPO" +
      "NSE\020\253\006\022\"\n\035CONSENSUS_CHECK_BLOCK_REQUEST\020" +
      "\254\006\022#\n\036CONSENSUS_CHECK_BLOCK_RESPONSE\020\255\006\022" +
      "#\n\036CONSENSUS_COMMIT_BLOCK_REQUEST\020\256\006\022$\n\037" +
      "CONSENSUS_COMMIT_BLOCK_RESPONSE\020\257\006\022#\n\036CO" +
      "NSENSUS_IGNORE_BLOCK_REQUEST\020\260\006\022$\n\037CONSE" +
      "NSUS_IGNORE_BLOCK_RESPONSE\020\261\006\022!\n\034CONSENS" +
      "US_FAIL_BLOCK_REQUEST\020\262\006\022\"\n\035CONSENSUS_FA" +
      "IL_BLOCK_RESPONSE\020\263\006\022#\n\036CONSENSUS_SETTIN" +
      "GS_GET_REQUEST\020\264\006\022$\n\037CONSENSUS_SETTINGS_" +
      "GET_RESPONSE\020\265\006\022 \n\033CONSENSUS_STATE_GET_R" +
      "EQUEST\020\266\006\022!\n\034CONSENSUS_STATE_GET_RESPONS" +
      "E\020\267\006\022!\n\034CONSENSUS_BLOCKS_GET_REQUEST\020\270\006\022" +
      "\"\n\035CONSENSUS_BLOCKS_GET_RESPONSE\020\271\006\022$\n\037C" +
      "ONSENSUS_NOTIFY_PEER_CONNECTED\020\204\007\022\'\n\"CON" +
      "SENSUS_NOTIFY_PEER_DISCONNECTED\020\205\007\022\"\n\035CO" +
      "NSENSUS_NOTIFY_PEER_MESSAGE\020\206\007\022\037\n\032CONSEN" +
      "SUS_NOTIFY_BLOCK_NEW\020\207\007\022!\n\034CONSENSUS_NOT" +
      "IFY_BLOCK_VALID\020\210\007\022#\n\036CONSENSUS_NOTIFY_B" +
      "LOCK_INVALID\020\211\007\022\"\n\035CONSENSUS_NOTIFY_BLOC" +
      "K_COMMIT\020\212\007\022\031\n\024CONSENSUS_NOTIFY_ACK\020\347\007B(" +
      "\n\025sawtooth.sdk.protobufP\001Z\rvalidator_pb2" +
      "b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_MessageList_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MessageList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MessageList_descriptor,
        new java.lang.String[] { "Messages", });
    internal_static_Message_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Message_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Message_descriptor,
        new java.lang.String[] { "MessageType", "CorrelationId", "Content", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
