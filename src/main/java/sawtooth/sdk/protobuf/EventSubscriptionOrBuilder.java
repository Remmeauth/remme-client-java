// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: events.proto

package sawtooth.sdk.protobuf;

public interface EventSubscriptionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:EventSubscription)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * EventSubscription is used when subscribing to events to specify the type
   * of events being subscribed to, along with any additional filters. See
   * validator/server/events/subscription.py for further explanation.
   * </pre>
   *
   * <code>string event_type = 1;</code>
   */
  java.lang.String getEventType();
  /**
   * <pre>
   * EventSubscription is used when subscribing to events to specify the type
   * of events being subscribed to, along with any additional filters. See
   * validator/server/events/subscription.py for further explanation.
   * </pre>
   *
   * <code>string event_type = 1;</code>
   */
  com.google.protobuf.ByteString
      getEventTypeBytes();

  /**
   * <code>repeated .EventFilter filters = 2;</code>
   */
  java.util.List<sawtooth.sdk.protobuf.EventFilter> 
      getFiltersList();
  /**
   * <code>repeated .EventFilter filters = 2;</code>
   */
  sawtooth.sdk.protobuf.EventFilter getFilters(int index);
  /**
   * <code>repeated .EventFilter filters = 2;</code>
   */
  int getFiltersCount();
  /**
   * <code>repeated .EventFilter filters = 2;</code>
   */
  java.util.List<? extends sawtooth.sdk.protobuf.EventFilterOrBuilder> 
      getFiltersOrBuilderList();
  /**
   * <code>repeated .EventFilter filters = 2;</code>
   */
  sawtooth.sdk.protobuf.EventFilterOrBuilder getFiltersOrBuilder(
      int index);
}
