// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: processor.proto

package sawtooth.sdk.protobuf;

public interface TpRegisterRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:TpRegisterRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * A settled upon name for the capabilities of the transaction processor.
   * For example: intkey, xo
   * </pre>
   *
   * <code>string family = 1;</code>
   */
  java.lang.String getFamily();
  /**
   * <pre>
   * A settled upon name for the capabilities of the transaction processor.
   * For example: intkey, xo
   * </pre>
   *
   * <code>string family = 1;</code>
   */
  com.google.protobuf.ByteString
      getFamilyBytes();

  /**
   * <pre>
   * The version supported.  For example:
   *      1.0  for version 1.0
   *      2.1  for version 2.1
   * </pre>
   *
   * <code>string version = 2;</code>
   */
  java.lang.String getVersion();
  /**
   * <pre>
   * The version supported.  For example:
   *      1.0  for version 1.0
   *      2.1  for version 2.1
   * </pre>
   *
   * <code>string version = 2;</code>
   */
  com.google.protobuf.ByteString
      getVersionBytes();

  /**
   * <pre>
   * The namespaces this transaction processor expects to interact with
   * when processing transactions matching this specification; will be
   * enforced by the state API on the validator.
   * </pre>
   *
   * <code>repeated string namespaces = 4;</code>
   */
  java.util.List<java.lang.String>
      getNamespacesList();
  /**
   * <pre>
   * The namespaces this transaction processor expects to interact with
   * when processing transactions matching this specification; will be
   * enforced by the state API on the validator.
   * </pre>
   *
   * <code>repeated string namespaces = 4;</code>
   */
  int getNamespacesCount();
  /**
   * <pre>
   * The namespaces this transaction processor expects to interact with
   * when processing transactions matching this specification; will be
   * enforced by the state API on the validator.
   * </pre>
   *
   * <code>repeated string namespaces = 4;</code>
   */
  java.lang.String getNamespaces(int index);
  /**
   * <pre>
   * The namespaces this transaction processor expects to interact with
   * when processing transactions matching this specification; will be
   * enforced by the state API on the validator.
   * </pre>
   *
   * <code>repeated string namespaces = 4;</code>
   */
  com.google.protobuf.ByteString
      getNamespacesBytes(int index);

  /**
   * <pre>
   * The maximum number of transactions that this transaction processor can
   * handle at once.
   * </pre>
   *
   * <code>uint32 max_occupancy = 5;</code>
   */
  int getMaxOccupancy();
}
