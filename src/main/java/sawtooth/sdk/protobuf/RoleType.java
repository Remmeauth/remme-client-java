// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authorization.proto

package sawtooth.sdk.protobuf;

/**
 * Protobuf enum {@code RoleType}
 */
public enum RoleType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>ROLE_TYPE_UNSET = 0;</code>
   */
  ROLE_TYPE_UNSET(0),
  /**
   * <pre>
   * A shorthand request for asking for all allowed roles.
   * </pre>
   *
   * <code>ALL = 1;</code>
   */
  ALL(1),
  /**
   * <pre>
   * Role defining validator to validator communication
   * </pre>
   *
   * <code>NETWORK = 2;</code>
   */
  NETWORK(2),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>ROLE_TYPE_UNSET = 0;</code>
   */
  public static final int ROLE_TYPE_UNSET_VALUE = 0;
  /**
   * <pre>
   * A shorthand request for asking for all allowed roles.
   * </pre>
   *
   * <code>ALL = 1;</code>
   */
  public static final int ALL_VALUE = 1;
  /**
   * <pre>
   * Role defining validator to validator communication
   * </pre>
   *
   * <code>NETWORK = 2;</code>
   */
  public static final int NETWORK_VALUE = 2;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static RoleType valueOf(int value) {
    return forNumber(value);
  }

  public static RoleType forNumber(int value) {
    switch (value) {
      case 0: return ROLE_TYPE_UNSET;
      case 1: return ALL;
      case 2: return NETWORK;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<RoleType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      RoleType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<RoleType>() {
          public RoleType findValueByNumber(int number) {
            return RoleType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return sawtooth.sdk.protobuf.Authorization.getDescriptor().getEnumTypes().get(0);
  }

  private static final RoleType[] VALUES = values();

  public static RoleType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private RoleType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:RoleType)
}

